//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Input/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""91a035db-6344-446f-8937-e0e766172644"",
            ""actions"": [
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""357b3f89-413e-4511-9b35-7f664fbbf736"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""f7f65c69-e6ee-4250-a596-e97fb5dbfe9c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""601a9b17-89d6-4d31-8bb1-fb474af6f8e6"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ScrollSelectTurret"",
                    ""type"": ""Value"",
                    ""id"": ""0013c33c-551b-43ee-a14a-9129e9a71240"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SelectTurret1"",
                    ""type"": ""Button"",
                    ""id"": ""1a1ed0f9-35d8-4cb3-abcf-7f25c439a933"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectTurret2"",
                    ""type"": ""Button"",
                    ""id"": ""834701c2-556a-4fbf-92d0-fbaa092a6b5e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectTurret3"",
                    ""type"": ""Button"",
                    ""id"": ""1bfbc2e7-eb68-4f8d-947f-a726738602f6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectTurret4"",
                    ""type"": ""Button"",
                    ""id"": ""822fd177-e2da-4833-ad3d-bacac50a9b29"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectTurret5"",
                    ""type"": ""Button"",
                    ""id"": ""28d00561-941e-4942-b0c2-37a57c5cfc29"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectTurret6"",
                    ""type"": ""Button"",
                    ""id"": ""76b99884-151f-4035-abdd-8548b1b707a0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlaceTurret"",
                    ""type"": ""Button"",
                    ""id"": ""1a316cb7-411e-46e5-9d97-f0822cf2c576"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Camera"",
                    ""type"": ""Value"",
                    ""id"": ""f28a3047-2c65-473d-be46-3678f630dcbd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""StepSelectTurretPos"",
                    ""type"": ""Button"",
                    ""id"": ""4a3b9c9b-4867-45ed-be72-091a2d112b42"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StepSelectTurretNeg"",
                    ""type"": ""Button"",
                    ""id"": ""6b13905c-134d-4bfc-91ec-48ce037e8e08"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""0c5888bc-de70-40eb-9e2e-9e7645e69c78"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""074d7457-8e19-4e22-98d7-2c94bfce7fcf"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b18f2dc-e721-426f-83f7-7f52bd2f816a"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""434a9397-d224-4021-b7c2-6506934fb275"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dfdd127b-b7da-46e1-b7a0-3bd1d6b38bf4"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""d89432f6-b7b2-4c88-ad69-e6b51c065a38"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""04759118-bac4-4b91-8206-56231e9a13f1"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1446a63f-a2c5-41c0-8b1e-a23f483f244c"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3941ebee-ea06-4d55-85a6-26c326d286b7"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""8dc1d44c-b529-433c-b46b-a22b8e727de9"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""b932542a-6a57-4709-86f3-ac62a185c0fa"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""49cbc90f-3513-4024-90ed-5aa5ab92bcfd"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ce249826-23fb-48b0-9f4e-5b00714a8c36"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""06516b25-1606-42b2-9353-f8a5942150ba"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fab25aac-7cf0-47a0-ad60-7d6ae2d8c316"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""909c408c-4c5e-4574-95bd-55e6c372e6ad"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ScrollSelectTurret"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be7742e5-e004-467a-a416-9ca3028a20c1"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SelectTurret1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b6b11101-8728-48be-8e0d-6f5c968f5f32"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SelectTurret2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4275f4af-c592-4199-9699-1d9b1dd27f6a"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SelectTurret3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7ed1be12-2a45-48a0-a57b-52401e22b759"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SelectTurret4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1fe53a5a-ab22-4183-98af-67868250051b"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SelectTurret5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3cd291dc-ac62-4c3a-8d2d-dc5f1b03cd5a"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SelectTurret6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9a5c626b-aedf-44f9-bcdb-13f8d4f9d44c"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""PlaceTurret"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f647ba14-bd45-4cbd-98df-211069fd202f"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlaceTurret"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""207b5810-9dd0-4d9f-baec-5824e9994830"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5985f4e4-6bcc-4792-bd07-ec0921eb6d7b"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""65bac65f-a22a-4e41-9442-4503ec64ffe9"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StepSelectTurretPos"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3422b42c-ed83-4bd6-9269-7a90cb8e4a83"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StepSelectTurretNeg"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""261c8df7-9bd4-419b-9043-7e5cc8d3881c"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2a2e61ac-6445-4e06-942b-b76cac70beec"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""fd2b8f28-ffcf-4f86-abd1-f99e159b6933"",
            ""actions"": [
                {
                    ""name"": ""Escape"",
                    ""type"": ""Button"",
                    ""id"": ""c2ac3d59-5962-409a-aa73-481a135f832a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""736f8572-3f21-498c-a8ac-f03c96991985"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Escape"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""179038c9-59bd-46e9-ba1a-c43750e0bc38"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Escape"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_Sprint = m_Player.FindAction("Sprint", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_ScrollSelectTurret = m_Player.FindAction("ScrollSelectTurret", throwIfNotFound: true);
        m_Player_SelectTurret1 = m_Player.FindAction("SelectTurret1", throwIfNotFound: true);
        m_Player_SelectTurret2 = m_Player.FindAction("SelectTurret2", throwIfNotFound: true);
        m_Player_SelectTurret3 = m_Player.FindAction("SelectTurret3", throwIfNotFound: true);
        m_Player_SelectTurret4 = m_Player.FindAction("SelectTurret4", throwIfNotFound: true);
        m_Player_SelectTurret5 = m_Player.FindAction("SelectTurret5", throwIfNotFound: true);
        m_Player_SelectTurret6 = m_Player.FindAction("SelectTurret6", throwIfNotFound: true);
        m_Player_PlaceTurret = m_Player.FindAction("PlaceTurret", throwIfNotFound: true);
        m_Player_Camera = m_Player.FindAction("Camera", throwIfNotFound: true);
        m_Player_StepSelectTurretPos = m_Player.FindAction("StepSelectTurretPos", throwIfNotFound: true);
        m_Player_StepSelectTurretNeg = m_Player.FindAction("StepSelectTurretNeg", throwIfNotFound: true);
        m_Player_Shoot = m_Player.FindAction("Shoot", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Escape = m_UI.FindAction("Escape", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_Sprint;
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_ScrollSelectTurret;
    private readonly InputAction m_Player_SelectTurret1;
    private readonly InputAction m_Player_SelectTurret2;
    private readonly InputAction m_Player_SelectTurret3;
    private readonly InputAction m_Player_SelectTurret4;
    private readonly InputAction m_Player_SelectTurret5;
    private readonly InputAction m_Player_SelectTurret6;
    private readonly InputAction m_Player_PlaceTurret;
    private readonly InputAction m_Player_Camera;
    private readonly InputAction m_Player_StepSelectTurretPos;
    private readonly InputAction m_Player_StepSelectTurretNeg;
    private readonly InputAction m_Player_Shoot;
    public struct PlayerActions
    {
        private @PlayerInputActions m_Wrapper;
        public PlayerActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @Sprint => m_Wrapper.m_Player_Sprint;
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @ScrollSelectTurret => m_Wrapper.m_Player_ScrollSelectTurret;
        public InputAction @SelectTurret1 => m_Wrapper.m_Player_SelectTurret1;
        public InputAction @SelectTurret2 => m_Wrapper.m_Player_SelectTurret2;
        public InputAction @SelectTurret3 => m_Wrapper.m_Player_SelectTurret3;
        public InputAction @SelectTurret4 => m_Wrapper.m_Player_SelectTurret4;
        public InputAction @SelectTurret5 => m_Wrapper.m_Player_SelectTurret5;
        public InputAction @SelectTurret6 => m_Wrapper.m_Player_SelectTurret6;
        public InputAction @PlaceTurret => m_Wrapper.m_Player_PlaceTurret;
        public InputAction @Camera => m_Wrapper.m_Player_Camera;
        public InputAction @StepSelectTurretPos => m_Wrapper.m_Player_StepSelectTurretPos;
        public InputAction @StepSelectTurretNeg => m_Wrapper.m_Player_StepSelectTurretNeg;
        public InputAction @Shoot => m_Wrapper.m_Player_Shoot;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Sprint.started += instance.OnSprint;
            @Sprint.performed += instance.OnSprint;
            @Sprint.canceled += instance.OnSprint;
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @ScrollSelectTurret.started += instance.OnScrollSelectTurret;
            @ScrollSelectTurret.performed += instance.OnScrollSelectTurret;
            @ScrollSelectTurret.canceled += instance.OnScrollSelectTurret;
            @SelectTurret1.started += instance.OnSelectTurret1;
            @SelectTurret1.performed += instance.OnSelectTurret1;
            @SelectTurret1.canceled += instance.OnSelectTurret1;
            @SelectTurret2.started += instance.OnSelectTurret2;
            @SelectTurret2.performed += instance.OnSelectTurret2;
            @SelectTurret2.canceled += instance.OnSelectTurret2;
            @SelectTurret3.started += instance.OnSelectTurret3;
            @SelectTurret3.performed += instance.OnSelectTurret3;
            @SelectTurret3.canceled += instance.OnSelectTurret3;
            @SelectTurret4.started += instance.OnSelectTurret4;
            @SelectTurret4.performed += instance.OnSelectTurret4;
            @SelectTurret4.canceled += instance.OnSelectTurret4;
            @SelectTurret5.started += instance.OnSelectTurret5;
            @SelectTurret5.performed += instance.OnSelectTurret5;
            @SelectTurret5.canceled += instance.OnSelectTurret5;
            @SelectTurret6.started += instance.OnSelectTurret6;
            @SelectTurret6.performed += instance.OnSelectTurret6;
            @SelectTurret6.canceled += instance.OnSelectTurret6;
            @PlaceTurret.started += instance.OnPlaceTurret;
            @PlaceTurret.performed += instance.OnPlaceTurret;
            @PlaceTurret.canceled += instance.OnPlaceTurret;
            @Camera.started += instance.OnCamera;
            @Camera.performed += instance.OnCamera;
            @Camera.canceled += instance.OnCamera;
            @StepSelectTurretPos.started += instance.OnStepSelectTurretPos;
            @StepSelectTurretPos.performed += instance.OnStepSelectTurretPos;
            @StepSelectTurretPos.canceled += instance.OnStepSelectTurretPos;
            @StepSelectTurretNeg.started += instance.OnStepSelectTurretNeg;
            @StepSelectTurretNeg.performed += instance.OnStepSelectTurretNeg;
            @StepSelectTurretNeg.canceled += instance.OnStepSelectTurretNeg;
            @Shoot.started += instance.OnShoot;
            @Shoot.performed += instance.OnShoot;
            @Shoot.canceled += instance.OnShoot;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Sprint.started -= instance.OnSprint;
            @Sprint.performed -= instance.OnSprint;
            @Sprint.canceled -= instance.OnSprint;
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @ScrollSelectTurret.started -= instance.OnScrollSelectTurret;
            @ScrollSelectTurret.performed -= instance.OnScrollSelectTurret;
            @ScrollSelectTurret.canceled -= instance.OnScrollSelectTurret;
            @SelectTurret1.started -= instance.OnSelectTurret1;
            @SelectTurret1.performed -= instance.OnSelectTurret1;
            @SelectTurret1.canceled -= instance.OnSelectTurret1;
            @SelectTurret2.started -= instance.OnSelectTurret2;
            @SelectTurret2.performed -= instance.OnSelectTurret2;
            @SelectTurret2.canceled -= instance.OnSelectTurret2;
            @SelectTurret3.started -= instance.OnSelectTurret3;
            @SelectTurret3.performed -= instance.OnSelectTurret3;
            @SelectTurret3.canceled -= instance.OnSelectTurret3;
            @SelectTurret4.started -= instance.OnSelectTurret4;
            @SelectTurret4.performed -= instance.OnSelectTurret4;
            @SelectTurret4.canceled -= instance.OnSelectTurret4;
            @SelectTurret5.started -= instance.OnSelectTurret5;
            @SelectTurret5.performed -= instance.OnSelectTurret5;
            @SelectTurret5.canceled -= instance.OnSelectTurret5;
            @SelectTurret6.started -= instance.OnSelectTurret6;
            @SelectTurret6.performed -= instance.OnSelectTurret6;
            @SelectTurret6.canceled -= instance.OnSelectTurret6;
            @PlaceTurret.started -= instance.OnPlaceTurret;
            @PlaceTurret.performed -= instance.OnPlaceTurret;
            @PlaceTurret.canceled -= instance.OnPlaceTurret;
            @Camera.started -= instance.OnCamera;
            @Camera.performed -= instance.OnCamera;
            @Camera.canceled -= instance.OnCamera;
            @StepSelectTurretPos.started -= instance.OnStepSelectTurretPos;
            @StepSelectTurretPos.performed -= instance.OnStepSelectTurretPos;
            @StepSelectTurretPos.canceled -= instance.OnStepSelectTurretPos;
            @StepSelectTurretNeg.started -= instance.OnStepSelectTurretNeg;
            @StepSelectTurretNeg.performed -= instance.OnStepSelectTurretNeg;
            @StepSelectTurretNeg.canceled -= instance.OnStepSelectTurretNeg;
            @Shoot.started -= instance.OnShoot;
            @Shoot.performed -= instance.OnShoot;
            @Shoot.canceled -= instance.OnShoot;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_Escape;
    public struct UIActions
    {
        private @PlayerInputActions m_Wrapper;
        public UIActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Escape => m_Wrapper.m_UI_Escape;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @Escape.started += instance.OnEscape;
            @Escape.performed += instance.OnEscape;
            @Escape.canceled += instance.OnEscape;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @Escape.started -= instance.OnEscape;
            @Escape.performed -= instance.OnEscape;
            @Escape.canceled -= instance.OnEscape;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnJump(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnScrollSelectTurret(InputAction.CallbackContext context);
        void OnSelectTurret1(InputAction.CallbackContext context);
        void OnSelectTurret2(InputAction.CallbackContext context);
        void OnSelectTurret3(InputAction.CallbackContext context);
        void OnSelectTurret4(InputAction.CallbackContext context);
        void OnSelectTurret5(InputAction.CallbackContext context);
        void OnSelectTurret6(InputAction.CallbackContext context);
        void OnPlaceTurret(InputAction.CallbackContext context);
        void OnCamera(InputAction.CallbackContext context);
        void OnStepSelectTurretPos(InputAction.CallbackContext context);
        void OnStepSelectTurretNeg(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnEscape(InputAction.CallbackContext context);
    }
}
